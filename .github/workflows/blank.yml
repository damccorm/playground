name: Assign issue to contributor
on: 
  issue_comment:

jobs:
  assign:
    name: Take an issue
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@v6
      with:
        script: |
          console.log(context)
          const body = context.payload.comment.body.split(' ');
          for (let i = 0; i < body.length; i++) {
            const bodyString = body[i].toLowerCase();
            if (bodyString == '.take-issue') {
              github.rest.issues.addAssignees({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignees: [context.payload.comment.user.login]
              });
            } else if (bodyString == '.close-issue') {
              github.rest.issues.update({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'closed'
              });
            } else if (bodyString == '.set-labels' || bodyString == '.add-labels' || bodyString == '.remove-labels') {
              if (i + 1 >= body.length) {
                github.rest.issues.addComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '.<update>-labels command detected, but no labels provided.'
                });
                return;
              } else {
                const labelsInRepo = (await github.paginate(github.rest.issues.listLabelsForRepo, {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })).map(l => l.name);
                const labelsToActionOn = body[i+1].split(',');
                for (label of labelsToActionOn) {
                  if (labelsInRepo.indexOf(label) < 0) {
                    github.rest.issues.addComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: `Label ${label} cannot be managed because it does not exist in the repo. Please check your spelling.`
                    });
                    return;
                  }
                }
                
                if (bodyString == '.set-labels') {
                  github.rest.issues.setLabels({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    labels: labelsToActionOn
                  });
                } else if (bodyString == '.add-labels') {
                  github.rest.issues.addLabels({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    labels: labelsToActionOn
                  });
                } else if (bodyString == '.remove-labels') {
                  // There's no true removeLabels command, we'll remove them one by one
                  for (const label of labelsToActionOn) {
                    github.rest.issues.removeLabel({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      name: label
                    });
                  }
                }
              }
            }
          }
